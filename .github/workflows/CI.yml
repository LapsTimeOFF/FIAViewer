name: CI

on:
  workflow_dispatch:
  push:
    branches: ["*"]

concurrency:
  group: "build"
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events:
        write

        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Use only 'java' to analyze code written in Java, Kotlin or both
        # Use only 'javascript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality

      # Autobuild attempts to build any compiled languages  (C/C++, C#, Go, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

      #   If the Autobuild fails above, remove it and uncomment the following three lines.
      #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

      # - run: |
      #   echo "Run, Build Application using script"
      #   ./location_of_script_within_repo/buildscript.sh

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Setup pnpm
        # You may pin to the exact commit or the version.
        # uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd
        uses: pnpm/action-setup@v2.2.4
        with:
          # Version of pnpm to install
          version: 7.21.0

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

  build-linux:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[NO-BUILD]')"
    needs: tests

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Setup pnpm
        # You may pin to the exact commit or the version.
        # uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd
        uses: pnpm/action-setup@v2.2.4
        with:
          # Version of pnpm to install
          version: 7.21.0

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build/release Electron app linux/x64
        run: pnpm build
        env:
          GH_TOKEN: ${{ secrets.TOKEN_GH_RELEASE }}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: build
          path: |
            release/**/*.AppImage
  build-windows:
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[NO-BUILD]')"
    needs: tests

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Setup pnpm
        # You may pin to the exact commit or the version.
        # uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd
        uses: pnpm/action-setup@v2.2.4
        with:
          # Version of pnpm to install
          version: 7.21.0

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build/release Electron app win32/x64
        run: pnpm build
        env:
          GH_TOKEN: ${{ secrets.TOKEN_GH_RELEASE }}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: build
          path: |
            release/*.exe
  build-macos:
    runs-on: macos-12
    if: "!contains(github.event.head_commit.message, '[NO-BUILD]')"
    needs: tests

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Setup pnpm
        # You may pin to the exact commit or the version.
        # uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd
        uses: pnpm/action-setup@v2.2.4
        with:
          # Version of pnpm to install
          version: 7.21.0

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - run: pnpm add dmg-builder dmg-license

      - name: Build/release Electron app darwin/universal
        run: pnpm build
        env:
          GH_TOKEN: ${{ secrets.TOKEN_GH_RELEASE }}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: build
          path: |
            release/**/*.dmg